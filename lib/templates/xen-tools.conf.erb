<% 
  # This is like a Rails Helper and belongs somewhere else
  def comment_if_blank(attribute)
    instance_variable_get('@'+ attribute.to_s) ? '' : '# '
  end

  def render_config(name, default)
	"#{comment_if_blank(name)}#{name.to_s.ununderscorize} = #{instance_variable_get('@'+ name.to_s) || default}"
  end
%>
##
#  /etc/xen-tools/xen-tools.conf
##
#
#  This is the global configuration file for the scripts included
# within the xen-tools package.
#
#  For more details please see:
#
#        http://xen-tools.org/
#
##


##
#
# File Format
# -----------
#
#  Anything following a '#' character is ignored as a comment.
#
#  Otherwise the format of this file "key = value".  The value of
# any keys in this file may be constructed via the output of a command.
#
#  For example:
#
#         kernel = /boot/vmlinuz-`uname -r`
#
##



#
##
#  Output directory for storing loopback images.
#
#  If you choose to use loopback images, which are simple to manage but
# slower than LVM partitions, then specify a directory here and uncomment
# the line.
#
#  New instances will be stored in subdirectories named after their
# hostnames.
# 
##
<%= render_config :dir, '/home/xen' %>
#

#
##
#
# If you don't wish to use loopback images then you may specify an 
# LVM volume group here instead
#
##
<%= render_config :lvm, 'skx-vg' %>


#
##
#
#  Installation method.
#
#  There are four distinct methods which you may to install a new copy
# of Linux to use in your Xen guest domain:
#
#   - Installation via the debootstrap command.
#   - Installation via the rpmstrap command.
#   - Installation via the rinse command.
#   - Installation by copying a directory containing a previous installation.
#   - Installation by untarring a previously archived image.
#
#  NOTE That if you use the "untar", or "copy" options you should ensure
# that the image you're left with matches the 'dist' setting later in
# this file.
#
#
##
#
# 
# install-method = [ debootstrap | rinse | rpmstrap | copy | tar ]
#
#
<%= render_config :install__method, 'debootstrap' %>
#
# If you're using the "copy", or "tar" installation methods you must
# need to specify the source location to copy from, or the source
# .tar file to unpack.
#
# You may specify that with a line such as:
#
# install-source = /path/to/copy
# install-source = /some/path/img.tar
#
#
<%= render_config :install__source, '/some/path/img.tar' %>

#
##
#  Command definitions.
##
#
# The "rinse", and "rpmstrap" commands are hardwired into 
# the script, but if you wish to modify the commands which are executed
# when installing new systems by a "copy", "debootstrap", or "tar" method
# you can do so here:
#
# (This allows you to install from a .tar.bz file, rather than a plain
# tar file, use cdebootstrap, etc.)
#
# install-method=copy:
<%= render_config :copy__cmd, '/bin/cp -a $src/* $dest' %>
#
# install-method=debootstrap:
<%= render_config :debootstrap__cmd, '/usr/sbin/debootstrap' %>
#
# install-method=tar:
<%= render_config :tar__cmd, '/bin/tar --numeric-owner -xvf $src' %>
#
#



#
##
#  Disk and Sizing options.
##
#
<%= render_config :size, '4Gb' %> # Disk image size.
<%= render_config :memory, '128Mb' %> # Memory size.
<%= render_config :swap, '256Mb' %> # Swap size.
<%= render_config :noswap, '1' %> # Don't use swap at all for the new system.
<%= render_config :fs, 	'ext3' %> # Use the EXT3 filesystem for the disk image.
<%= render_config :dist, 'etch' %> # Default distribution to install.
<%= render_config :image, 'sparse' %> # Specify sparse vs. full disk images.

#
#  Currently supported and tested distributions include:
#
# via Debootstrap:
#
#  Debian:
#   sid, sarge, etch, lenny.
#
#  Ubuntu:
#   edgy, feisty, dapper.
#
# via Rinse:
#   centos-4, centos-5.
#   fedora-core-4, fedora-core-5, fedora-core-6, fedora-core-7
#
#



##
# Networking setup values.
##

#
# Uncomment and adjust these network settings if you wish to give your
# new instances static IP addresses.
#
<%= render_config :gateway, '192.168.1.1' %>
<%= render_config :netmask, '255.255.255.0' %>
<%= render_config :broadcast, '192.168.1.255' %>
#
# Uncomment this if you wish the images to use DHCP
#
<%= render_config :dhcp, 1 %>


##
# Misc options
##

#
# Uncomment the following line if you wish to disable the caching
# of downloaded .deb files when using debootstrap to install images.
#
<%= render_config :cache, 'no' %>
#

#
# Uncomment the following line if you wish to interactively setup
# a new root password for images.
#
<%= render_config :passwd, 1 %>

#
# If you'd like all accounts on your host system which are not present
# on the guest system to be copied over then uncomment the following line.
#
<%= render_config :accounts, 1 %>
#

#
# Default kernel and ramdisk to use for the virtual servers
#
<%= render_config :kernel, '/boot/vmlinuz-`uname -r`' %>
<%= render_config :initrd, '/boot/initrd.img-`uname -r`' %>

#
#  The architecture to use when using debootstrap, rinse, or rpmstrap.
#
#  This is most useful on 64 bit host machines, for other systems it
# doesn't need to be used.
#
<%= render_config :arch, '[i386|amd64]' %>
#

#
# The default mirror for debootstrap to install Debian-derived distributions
#
# mirror = http://ftp.us.debian.org/debian/

#
# A mirror suitable for use when installing the Dapper release of Ubuntu.
#
# mirror = http://archive.ubuntu.com/ubuntu/

<%= render_config :mirror, 'http://archive.ubuntu.com/ubuntu/' %>


#
#  If you like you could use per-distribution mirrors, which will
# be more useful if you're working in an environment where you want
# to regularly use multiple distributions:
#
# mirror_sid=http://ftp.us.debian.org/debian
# mirror_sarge=http://ftp.us.debian.org/debian
# mirror_etch=http://ftp.us.debian.org/debian
# mirror_dapper=http://archive.ubuntu.com/ubuntu
# mirror_edgy=http://archive.ubuntu.com/ubuntu
# mirror_feisty=http://archive.ubuntu.com/ubuntu
# mirror_gutsy=http://archive.ubuntu.com/ubuntu


#
#  Filesystem options for the different filesystems we support.
#
<%= render_config :ext3_options, 'noatime,nodiratime,errors=remount-ro' %>
<%= render_config :ext2_options, 'noatime,nodiratime,errors=remount-ro' %>
<%= render_config :xfs_options,  'defaults' %>
<%= render_config :reiser_options, 'defaults' %>

#
#  Uncomment if you wish newly created images to boot once they've been
# created.
#
<%= render_config :boot, '1' %>


#
#  If you're using a newer version of the Xen guest kernel you will
# need to make sure that you use 'xvc0' for the guest serial device,
# and 'xvdX' instead of 'sdX' for serial devices.
#
#  You may specify the things to use here:
#
# serial_device = tty1 #default
# serial_device = xvc0
#
# disk_device = sda  #default
# disk_device = xvda
#


#
#  Here we specify the output directory which the Xen configuration
# files will be written to, and the suffix to give them.
#
#  Historically xen-tools have created configuration files in /etc/xen,
# and given each file the name $hostname.cfg.  If you want to change
# that behaviour you may do so here.
#
#
<%= render_config :output, '/etc/xen' %>
<%= render_config :extension, '.cfg' %>
#
